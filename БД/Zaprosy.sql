USE UNIVER;

--задание 1
SELECT
	max(AUDITORIUM_CAPACITY) [Максимальная вместимость],
	min(AUDITORIUM_CAPACITY) [Минимальная вместимость],
	avg(AUDITORIUM_CAPACITY) [Средняя вместимость],
	sum(AUDITORIUM_CAPACITY) [Вместимость всех аудиторий],
	count(*) [Количетсво аудиторий]
FROM AUDITORIUM

--задание 2
SELECT AUDITORIUM_TYPENAME,
	max(AUDITORIUM_CAPACITY) [Максимальная вместимость],
	min(AUDITORIUM_CAPACITY) [Минимальная вместимость],
	avg(AUDITORIUM_CAPACITY) [Средняя вместимость],
	count(*) [Количество аудиторий]
FROM AUDITORIUM join AUDITORIUM_TYPE on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE GROUP BY AUDITORIUM_TYPE.AUDITORIUM_TYPENAME

--задание 3
SELECT * FROM(SELECT CASE WHEN NOTE = 10 then '10'
					WHEN NOTE between 8 and 9 then '9-8'
					WHEN NOTE between 6 and 7 then '7-6'
					WHEN NOTE between 4 and 5 then '5-4'
					ELSE 'меньше 4'
					END [Оценка], COUNT(*) [Количество]
	FROM PROGRESS GROUP BY CASE
					WHEN NOTE = 10 then '10'
					WHEN NOTE between 8 and 9 then '9-8'
					WHEN NOTE between 6 and 7 then '7-6'
					WHEN NOTE between 4 and 5 then '5-4'
					ELSE 'меньше 4'
					END) as notes
						ORDER BY CASE [оценка]
						WHEN '10' then 1
						WHEN '9-8' then 2
						WHEN '7-6' then 3
						WHEN '5-4' then 4
						WHEN 'меньше 4' then 5
						ELSE 0
						END


SELECT FACULTY.FACULTY,
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT 
	WHERE PROGRESS.SUBJECT = 'ТРИ'
GROUP BY FACULTY.FACULTY
ORDER BY [Средняя оценка] desc

--задание 5 ROLLUP
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT,
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT WITH ROLLUP

--задание 6 CUBE
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT,
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT WITH CUBE

--задание 7, 8, 9
-- UNION
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT
	UNION
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИТ' or FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT

-- UNION ALL
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ' or FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT
	UNION ALL
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT

-- INTERSECT
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ' or FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT
	INTERSECT
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT

-- EXCEPT
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(8))),4) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ТОВ' or FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT
	EXCEPT
SELECT FACULTY.FACULTY, PROGRESS.SUBJECT, 
	round(avg(cast(NOTE as float(4))),2) [Средняя оценка]
FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
	join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
	join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИТ'
GROUP BY FACULTY.FACULTY, PROGRESS.SUBJECT

-- задание 10 
SELECT PROGRESS.SUBJECT, PROGRESS.NOTE, Count(*) [Количество]
 FROM PROGRESS join STUDENT ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
GROUP BY PROGRESS.SUBJECT, PROGRESS.NOTE
HAVING PROGRESS.NOTE = 4 or PROGRESS.NOTE = 5



